# TODO: add compilers as extensions
# * MPLAB XC8 Compiler v2.20 mplabxc8
#   https://ww1.microchip.com/downloads/en/DeviceDoc/xc8-v2.20-full-install-linux-installer.run
# * MPLAB XC16 Compiler v1.50 / mplabxc16
#   https://ww1.microchip.com/downloads/en/DeviceDoc/xc16-v1.50-full-install-linux64-installer.run
# * MPLAB XC32/32++ Compiler v2.41 mplabxc32
#   https://ww1.microchip.com/downloads/en/DeviceDoc/xc32-v2.41-full-install-linux-installer.run
# TODO: bump runtime

app-id: com.microchip.mplabx
runtime: org.freedesktop.Platform
runtime-version: '21.08'
sdk: org.freedesktop.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.openjdk8
  - org.freedesktop.Sdk.Extension.toolchain-i386
#add-extensions:
#  org.freedesktop.Platform.Compat.i386:
#    directory: lib/i386-linux-gnu
#    version: '19.08'
#  org.freedesktop.Platform.Compat.i386.Debug:
#    directory: lib/debug/lib/i386-linux-gnu
#    version: '19.08'
#    no-autodownload: true
x-compat-i386-opts: &compat_i386_opts
  prepend-pkg-config-path: /app/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig
  ldflags: -L/app/lib32
  prepend-path: /usr/lib/sdk/toolchain-i386/bin
  env:
    CC: i686-unknown-linux-gnu-gcc
    CXX: i686-unknown-linux-gnu-g++
  libdir: /app/lib32
command: mplab_ide
finish-args:
  - --allow=multiarch
  - --device=all
  - --device=dri
  - --env=JAVA_HOME=/app/jre
  - --env=PATH=/app/bin:/usr/bin:/app/jre/bin:/app/extra/mplabx/mplab_platform/bin
  - --filesystem=home
  - --persist=.cache/mplab_ide
  - --persist=.java
  - --persist=.mplab_ide
  - --share=ipc
  - --share=network
  - --socket=x11
modules:
  - name: openjdk
    buildsystem: simple
    build-commands:
      - /usr/lib/sdk/openjdk8/install.sh
  - name: mplabx
    buildsystem: simple
    build-commands:
      - install -dm755 /app/lib{,32,/i386-linux-gnu}
      #- install -dm755 /app/lib/debug/lib/i386-linux-gnu
      - install -Dm644 ld.so.conf -t /app/etc/
      - install -Dm644 mplabx-install.sh -t /app/bin/
      - install -Dm755 apply_extra -t /app/bin/
      - install -Dm644 ${FLATPAK_ID}{,.mplab_ipe}.desktop -t /app/share/applications/
      - install -Dm644 ide_48.png /app/share/icons/hicolor/48x48/apps/${FLATPAK_ID}.png
      - install -Dm644 ide_256.png /app/share/icons/hicolor/256x256/apps/${FLATPAK_ID}.png
      - install -Dm644 ipe_48.png /app/share/icons/hicolor/48x48/apps/${FLATPAK_ID}.mplab_ipe.png
        # symlink executables
      - |
          for app in mbd.sh mplab_ide mplab_ipe prjMakefilesGenerator.sh; do
            ln -s /app/extra/mplabx/mplab_platform/bin/${app} /app/bin/${app}
          done
      - install -dm755 /app/docs
      - install -Dm644 mplabx-override.conf /app/docs/systemd_overrides/mplabx-override.conf
      - ln -s ../extra/docs/udev_rules /app/docs/udev_rules
        # workaround for flatpak not being able to mount extensions during apply_extra
      - cp -r /usr/lib/i386-linux-gnu/* /app/lib/i386-linux-gnu/
    sources:
      - type: extra-data
        filename: installer.tar
        url: https://ww1.microchip.com/downloads/en/DeviceDoc/MPLABX-v5.50(1)-linux-installer.tar
        sha256: 85be41d8da0c388c1889520b8641abf816e23ac946003b0460aaa4efaa5ad1d9
        size: 592752640
      - type: file
        path: apply_extra
      - type: file
        path: com.microchip.mplabx.desktop
      - type: file
        path: com.microchip.mplabx.mplab_ipe.desktop
      - type: file
        path: ld.so.conf
      - type: file
        path: mplabx-install.sh
      - type: file
        path: mplabx-override.conf
      - type: file
        path: icons/ide_256.png
      - type: file
        path: icons/ide_48.png
      - type: file
        path: icons/ipe_48.png
    modules:
      - ../shared-modules/fakeroot/fakeroot.json
      - ../shared-modules/fakechroot/fakechroot.json
      - ../shared-modules/fakeroot/lib32-fakeroot.json
      - ../shared-modules/fakechroot/lib32-fakechroot.json
      - name: openjfx8-bin
        buildsystem: simple
        build-commands:
          - install -Dm755 jre/lib/amd64/* -t /app/jre/jre/lib/amd64/
          - install -Dm644 jre/lib/ext/jfxrt.jar -t /app/jre/jre/lib/ext/
          - install -Dm644 jre/lib/{javafx.properties,jfxswt.jar} -t /app/jre/jre/lib/
          - install -Dm644 lib/* -t /app/jre/lib/
        sources:
          - type: archive
            url: https://archive.archlinux.org/packages/j/java8-openjfx/java8-openjfx-8.u202-3-x86_64.pkg.tar.xz
            sha256: 197de9331b65824ff8303e910446c20f307a0c705f762c2a2f30f943b46f4a18
            strip-components: 4
# TODO: get gradle to work with openjdk-1.8.0_252-adoptopenjdk
#     - openjfx8/openjfx8.json
